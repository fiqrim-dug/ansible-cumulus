- name: Set vlan
  nvidia.nvue.command:
    commands:
    - set interface vlan{{ breakout.vlan_id }} vlan {{ breakout.vlan_id }}
    apply: true
  register: vlan_config
  when: ansible_connection != "ansible.netcommon.httpapi"

- name: Set breakout interface
  connection: ansible.netcommon.httpapi
  nvidia.nvue.interface:
    state: merged
    revid: '{{ revision.revid }}'
    data:
      - id: '{{ item.breakout_interface }}'
        description: '{{ item.breakout_description }}'
        link:
          breakout:
            - id: '{{ item.breakout_mode }}'
  loop: "{{ breakout }}"

- name: Set bridge interface and vlan interface
  connection: ansible.netcommon.httpapi
  nvidia.nvue.interface:
    state: merged
    revid: '{{ revision.revid }}'
    data:
      - id: 'vlan{{ item.vlan_id }}'
        description: "{{ item.breakout_description }}"
        ip:
          address: 
          - id: "{{ item.vlan_ipadd }}"
        # vlan:
        # - id: '{{ vlan_id }}'
      - id: '{{ vlan_interface }}'
        description: "{{ item.breakout_description }}"
        bridge:
          domain:
          - id: '{{ bridge_domain }}'
            untagged: '{{ item.vlan_id }}'
            vlan:
            - id: '{{ item.vlan_id }}'
  register: bridge_config
  loop: "{{ breakout }}"

- name: Set dhcp-relay interface
  connection: ansible.netcommon.httpapi
  nvidia.nvue.service:
    state: merged
    revid: '{{ revision.revid }}'
    data:
      dhcp_relay:
      - id : 'default'
        interface:
        - id : '{{ uplink_interface }}'
        - id: 'vlan{{ item.vlan_id }}'
  loop: "{{ breakout }}"
